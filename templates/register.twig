{% extends "_layout.twig" %}

{% block title %}Create Account · {{ siteName }}{% endblock %}

{% block content %}
  {% set user = user ?? null %}

<div class="container">
  <div class="row justify-content-center">
    <div class="col-lg-8">
      <!-- Header Section -->
      <div class="text-center mb-5">
        <h1 class="display-4 fw-bold mb-3">Account Registration</h1>
        <p class="lead text-muted">
          Job posters register here
        </p>
      </div>
    </div>
  </div>
</div>


  <div class="container" style="max-width: 680px;">

    <!-- User Guidance Section -->
    <div class="row g-4 mb-5">
      <!-- Schools and Recruiting Firms -->
      <div class="col-lg-6">
        <div class="card h-100 border-0 shadow-sm">
          <div class="card-body p-4">
            <div class="d-flex align-items-center mb-3">
              <i class="bi bi-building text-primary me-3" style="font-size: 1.5rem;"></i>
              <h2 class="h5 fw-bold mb-0 text-primary">Schools and Recruiting Firms</h2>
            </div>
            <ul class="list-unstyled">
              <li class="mb-2">
                <i class="bi bi-check-circle text-success me-2"></i>
                Please sign up below if you wish to create an account to be able to list opportunities.
              </li>
              <li class="mb-2">
                <i class="bi bi-envelope text-success me-2"></i>
                After submitting the information below, you will be sent a validation email.
              </li>
              <li class="mb-2">
                <i class="bi bi-person-check text-success me-2"></i>
                Once you have validated your email, you will be able to create your profile and begin posting opportunities.
              </li>
            </ul>
            <div class="mt-3">
              <i class="bi bi-arrow-down text-primary" style="font-size: 1.2rem;"></i>
              <span class="text-primary fw-semibold ms-2">Complete the form below to get started</span>
            </div>
          </div>
        </div>
      </div>

      <!-- Candidates and Job Seekers -->
      <div class="col-lg-6">
        <div class="card h-100 border-0 shadow-sm">
          <div class="card-body p-4">
            <div class="d-flex align-items-center mb-3">
              <i class="bi bi-people text-success me-3" style="font-size: 1.5rem;"></i>
              <h2 class="h5 fw-bold mb-0 text-success">Candidates and Job Seekers</h2>
            </div>
            <ul class="list-unstyled">
              <li class="mb-2">
                <i class="bi bi-search text-success me-2"></i>
                No account registration is required! Searching for opportunities is always free and open to all.
              </li>
              <li class="mb-3">
                <i class="bi bi-bell text-success me-2"></i>
                If you wish to receive regular updates about new positions, please subscribe to the BGS Monthly Recap.
              </li>
            </ul>
            <div class="d-grid">
              <a href="#" class="button rounded-pill">
                <i class="bi bi-envelope-plus me-2"></i>Subscribe to Monthly Recap
              </a>
            </div>
            <div class="mt-3 text-center">
              <small class="text-muted">
                <i class="bi bi-arrow-right me-1"></i>
                <a href="{{ url('jobs') }}" class="text-decoration-none">Start searching jobs now</a>
              </small>
            </div>
          </div>
        </div>
      </div>
    </div>

    {% if user and user.getErrors() %}
      <div class="alert alert-danger">
        <strong>We couldn’t create your account.</strong>
        <ul class="mb-0">
          {% for attr, errs in user.getErrors() %}
            {% for err in errs %}
              <li>{{ err }}</li>
            {% endfor %}
          {% endfor %}
        </ul>
      </div>
    {% endif %}
<h1 class="h3 mb-4">Job Posters - Create your account</h1>
    <form method="post" class="needs-validation" novalidate>
      {{ csrfInput() }}
      {{ actionInput('users/save-user') }}
      {{ redirectInput('registration/success') }}

      <div class="mb-3">
        <label for="regEmail" class="form-label">Email address <span class="text-danger">*</span></label>
        <input
          type="email"
          id="regEmail"
          name="email"
          class="form-control{% if user and user.getErrors('email') %} is-invalid{% endif %}"
          value="{{ (user ? user.email : '')|e }}"
          autocomplete="email"
          required
        >
        {% if user and user.getErrors('email') %}
          <div class="invalid-feedback">
            {{ user.getErrors('email')|join(', ') }}
          </div>
        {% endif %}
      </div>

      <div class="row">
        <div class="col-md-6 mb-3">
          <label for="firstName" class="form-label">First name <span class="text-danger">*</span></label>
          <input
            type="text"
            id="firstName"
            name="firstName"
            class="form-control{% if user and user.getErrors('firstName') %} is-invalid{% endif %}"
            value="{{ (user ? user.firstName : '')|e }}"
            autocomplete="given-name"
            required
          >
          {% if user and user.getErrors('firstName') %}
            <div class="invalid-feedback">
              {{ user.getErrors('firstName')|join(', ') }}
            </div>
          {% endif %}
        </div>
        <div class="col-md-6 mb-3">
          <label for="lastName" class="form-label">Last name <span class="text-danger">*</span></label>
          <input
            type="text"
            id="lastName"
            name="lastName"
            class="form-control{% if user and user.getErrors('lastName') %} is-invalid{% endif %}"
            value="{{ (user ? user.lastName : '')|e }}"
            autocomplete="family-name"
            required
          >
          {% if user and user.getErrors('lastName') %}
            <div class="invalid-feedback">
              {{ user.getErrors('lastName')|join(', ') }}
            </div>
          {% endif %}
        </div>
      </div>

      <div class="mb-3">
        <label for="password" class="form-label">Password <span class="text-danger">*</span></label>
        <input
          type="password"
          id="password"
          name="password"
          class="form-control{% if user and user.getErrors('password') %} is-invalid{% endif %}"
          autocomplete="new-password"
          required
        >
        {% if user and user.getErrors('password') %}
          <div class="invalid-feedback">
            {{ user.getErrors('password')|join(', ') }}
          </div>
        {% endif %}
      </div>

      <div class="mb-4">
        <label for="passwordConfirm" class="form-label">Confirm password <span class="text-danger">*</span></label>
        <input
          type="password"
          id="passwordConfirm"
          name="passwordConfirm"
          class="form-control"
          autocomplete="new-password"
          required
        >
        <div class="invalid-feedback">
          Passwords do not match.
        </div>
      </div>

      <button type="submit" class="button rounded-pill mt-4 w-100">Create account</button>
      
    </form>
  </div>

  <script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const password = document.getElementById('password');
    const passwordConfirm = document.getElementById('passwordConfirm');

    function validatePasswords() {
      const isValid = password.value === passwordConfirm.value && passwordConfirm.value.length > 0;
      
      if (passwordConfirm.value.length > 0) {
        passwordConfirm.classList.toggle('is-invalid', !isValid);
        passwordConfirm.classList.toggle('is-valid', isValid);
      } else {
        passwordConfirm.classList.remove('is-invalid', 'is-valid');
      }
      
      return isValid;
    }

    // Validate on input
    passwordConfirm.addEventListener('input', validatePasswords);
    password.addEventListener('input', function() {
      if (passwordConfirm.value.length > 0) {
        validatePasswords();
      }
    });

    // Validate on form submit
    form.addEventListener('submit', function(e) {
      if (!validatePasswords() || passwordConfirm.value.length === 0) {
        e.preventDefault();
        passwordConfirm.classList.add('is-invalid');
        passwordConfirm.focus();
      }
    });
  });
  </script>
{% endblock %}
