{% extends "_layout.twig" %}

{% block title %}Create Account · {{ siteName }}{% endblock %}

{% block content %}
  {% set user = user ?? null %}

  <div class="container" style="max-width: 680px;">
    <h1 class="h3 mb-4">Create your account</h1>

    {% if user and user.getErrors() %}
      <div class="alert alert-danger">
        <strong>We couldn’t create your account.</strong>
        <ul class="mb-0">
          {% for attr, errs in user.getErrors() %}
            {% for err in errs %}
              <li>{{ err }}</li>
            {% endfor %}
          {% endfor %}
        </ul>
      </div>
    {% endif %}

    <form method="post" class="needs-validation" novalidate>
      {{ csrfInput() }}
      {{ actionInput('users/save-user') }}
      {{ redirectInput('registration/success') }}

      <div class="mb-3">
        <label for="regEmail" class="form-label">Email address <span class="text-danger">*</span></label>
        <input
          type="email"
          id="regEmail"
          name="email"
          class="form-control{% if user and user.getErrors('email') %} is-invalid{% endif %}"
          value="{{ (user ? user.email : '')|e }}"
          autocomplete="email"
          required
        >
        {% if user and user.getErrors('email') %}
          <div class="invalid-feedback">
            {{ user.getErrors('email')|join(', ') }}
          </div>
        {% endif %}
      </div>

      <div class="row">
        <div class="col-md-6 mb-3">
          <label for="firstName" class="form-label">First name <span class="text-danger">*</span></label>
          <input
            type="text"
            id="firstName"
            name="firstName"
            class="form-control{% if user and user.getErrors('firstName') %} is-invalid{% endif %}"
            value="{{ (user ? user.firstName : '')|e }}"
            autocomplete="given-name"
            required
          >
          {% if user and user.getErrors('firstName') %}
            <div class="invalid-feedback">
              {{ user.getErrors('firstName')|join(', ') }}
            </div>
          {% endif %}
        </div>
        <div class="col-md-6 mb-3">
          <label for="lastName" class="form-label">Last name <span class="text-danger">*</span></label>
          <input
            type="text"
            id="lastName"
            name="lastName"
            class="form-control{% if user and user.getErrors('lastName') %} is-invalid{% endif %}"
            value="{{ (user ? user.lastName : '')|e }}"
            autocomplete="family-name"
            required
          >
          {% if user and user.getErrors('lastName') %}
            <div class="invalid-feedback">
              {{ user.getErrors('lastName')|join(', ') }}
            </div>
          {% endif %}
        </div>
      </div>

      <div class="mb-3">
        <label for="password" class="form-label">Password <span class="text-danger">*</span></label>
        <input
          type="password"
          id="password"
          name="password"
          class="form-control{% if user and user.getErrors('password') %} is-invalid{% endif %}"
          autocomplete="new-password"
          required
        >
        {% if user and user.getErrors('password') %}
          <div class="invalid-feedback">
            {{ user.getErrors('password')|join(', ') }}
          </div>
        {% endif %}
      </div>

      <div class="mb-4">
        <label for="passwordConfirm" class="form-label">Confirm password <span class="text-danger">*</span></label>
        <input
          type="password"
          id="passwordConfirm"
          name="passwordConfirm"
          class="form-control"
          autocomplete="new-password"
          required
        >
        <div class="invalid-feedback">
          Passwords do not match.
        </div>
      </div>

      <button type="submit" class="button rounded-pill mt-4 w-100">Create account</button>
      
    </form>
  </div>

  <script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const password = document.getElementById('password');
    const passwordConfirm = document.getElementById('passwordConfirm');

    function validatePasswords() {
      const isValid = password.value === passwordConfirm.value && passwordConfirm.value.length > 0;
      
      if (passwordConfirm.value.length > 0) {
        passwordConfirm.classList.toggle('is-invalid', !isValid);
        passwordConfirm.classList.toggle('is-valid', isValid);
      } else {
        passwordConfirm.classList.remove('is-invalid', 'is-valid');
      }
      
      return isValid;
    }

    // Validate on input
    passwordConfirm.addEventListener('input', validatePasswords);
    password.addEventListener('input', function() {
      if (passwordConfirm.value.length > 0) {
        validatePasswords();
      }
    });

    // Validate on form submit
    form.addEventListener('submit', function(e) {
      if (!validatePasswords() || passwordConfirm.value.length === 0) {
        e.preventDefault();
        passwordConfirm.classList.add('is-invalid');
        passwordConfirm.focus();
      }
    });
  });
  </script>
{% endblock %}
